[gd_scene load_steps=16 format=2]

[ext_resource path="res://assets/mountains/mountains_1.png" type="Texture" id=1]
[ext_resource path="res://assets/terrain/terrain.gd" type="Script" id=2]
[ext_resource path="res://assets/mountains/mountains.tscn" type="PackedScene" id=3]
[ext_resource path="res://assets/mountains/mountains_2.png" type="Texture" id=4]
[ext_resource path="res://assets/mountains/mountains_3.png" type="Texture" id=5]
[ext_resource path="res://assets/mountains/mountains_4.png" type="Texture" id=6]
[ext_resource path="res://assets/cloud/cloud.tscn" type="PackedScene" id=7]
[ext_resource path="res://addons/Godot-Touch-Input-Manager/InputManager.gd" type="Script" id=8]
[ext_resource path="res://assets/cloud/cloud_2.png" type="Texture" id=9]
[ext_resource path="res://assets/cloud/cloud_3.png" type="Texture" id=10]

[sub_resource type="CylinderMesh" id=5]

[sub_resource type="ShaderMaterial" id=6]

[sub_resource type="SpatialMaterial" id=4]
albedo_color = Color( 0.960784, 0.960784, 0.960784, 1 )

[sub_resource type="CubeMesh" id=2]
material = SubResource( 4 )
size = Vector3( 150, 1, 150 )

[sub_resource type="ConvexPolygonShape" id=3]
points = PoolVector3Array( -75, -0.5, -75, -75, 0.5, -75, 75, -0.5, -75, -75, -0.5, 75, -75, 0.5, 75, 75, 0.5, -75, 75, -0.5, 75, 75, 0.5, 75 )

[node name="terrain" type="Node"]
script = ExtResource( 2 )

[node name="sky" type="Spatial" parent="."]

[node name="templates" type="Spatial" parent="sky"]
visible = false

[node name="cloud_1" parent="sky/templates" instance=ExtResource( 7 )]

[node name="cloud_2" parent="sky/templates" instance=ExtResource( 7 )]
texture = ExtResource( 9 )

[node name="cloud_3" parent="sky/templates" instance=ExtResource( 7 )]
texture = ExtResource( 10 )

[node name="pilars" type="Spatial" parent="sky"]
visible = false

[node name="MeshInstance" type="MeshInstance" parent="sky/pilars"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -73.6257, 0, -73.4369 )
mesh = SubResource( 5 )
skeleton = NodePath("../..")
material/0 = SubResource( 6 )

[node name="MeshInstance3" type="MeshInstance" parent="sky/pilars"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 70, 0, -70 )
mesh = SubResource( 5 )
skeleton = NodePath("../..")
material/0 = SubResource( 6 )

[node name="cloudHolder" type="Spatial" parent="sky"]

[node name="Timer" type="Timer" parent="sky"]
wait_time = 2.0
autostart = true

[node name="ground" type="Spatial" parent="."]

[node name="season_1" type="Spatial" parent="ground"]
visible = false

[node name="mountains" parent="ground/season_1" instance=ExtResource( 3 )]
sprite_resources = ExtResource( 1 )

[node name="mountains2" parent="ground/season_1" instance=ExtResource( 3 )]
sprite_resources = ExtResource( 4 )

[node name="mountains3" parent="ground/season_1" instance=ExtResource( 3 )]
sprite_resources = ExtResource( 5 )

[node name="mountains4" parent="ground/season_1" instance=ExtResource( 3 )]
sprite_resources = ExtResource( 6 )

[node name="season_2" type="Spatial" parent="ground"]
visible = false

[node name="mountains5" parent="ground/season_2" instance=ExtResource( 3 )]
sprite_resources = ExtResource( 1 )

[node name="mountains6" parent="ground/season_2" instance=ExtResource( 3 )]
sprite_resources = ExtResource( 4 )

[node name="mountains7" parent="ground/season_2" instance=ExtResource( 3 )]
sprite_resources = ExtResource( 5 )

[node name="mountains8" parent="ground/season_2" instance=ExtResource( 3 )]
sprite_resources = ExtResource( 6 )

[node name="featureHolder" type="Spatial" parent="ground"]

[node name="ground" type="StaticBody" parent="ground"]

[node name="MeshInstance" type="MeshInstance" parent="ground/ground"]
mesh = SubResource( 2 )
skeleton = NodePath("../../..")
material/0 = null

[node name="CollisionShape" type="CollisionShape" parent="ground/ground"]
shape = SubResource( 3 )

[node name="inputDetection" type="Node" parent="."]
script = ExtResource( 8 )

[connection signal="timeout" from="sky/Timer" to="." method="_on_Timer_timeout"]
[connection signal="input_event" from="ground/ground" to="." method="_on_ground_input_event"]
[connection signal="any_gesture" from="inputDetection" to="." method="_on_inputDetection_any_gesture"]
